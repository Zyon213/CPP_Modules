#include "ShrubberyCreationForm.hpp"

const std::string &ShrubberyCreationForm::name = std::string("shrubbery creation");

ShrubberyCreationForm::ShrubberyCreationForm(const std::string &Target) : Form(ShrubberyCreationForm::name, 145, 137), target(Target)
{
}
ShrubberyCreationForm::~ShrubberyCreationForm()
{
}
const char *ShrubberyCreationForm::UnableToOpenFile::what() const throw()
{
    return ("Unable to open file");
}

void ShrubberyCreationForm::execute(Bureaucrat const &executor) const
{
    if (executor.getGrade() > ShrubberyCreationForm::getExeGrade())
        throw GradeTooLowException();
    if (ShrubberyCreationForm::getCheckSign() == true)
        throw GradeAlreadySigned();
    std::ofstream fileWrite;
    std::string newFile;

    newFile = this->target;
    newFile.append("_shrubbery");

    fileWrite.open(newFile);
    if (!fileWrite)
        throw UnableToOpenFile();

    std::string tree = "                      oxox                            \n"
                       "			        ox0xox0x                          \n"
                       "			      0x0x0x0x0x0x                        \n"
                       "			    0x0x0x0x0x0x0x0x                      \n"
                       "			  0x0x0x0x0x0x0x0x0x0x                    \n"
                       "	        0x0x0x0x0x0x0x0x0x0x0x0x                  \n"
                       "          0x0x0x0x0x0x0x0x0x0x0x0x0x0x                \n"
                       "        0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x              \n"
                       "	  0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x            \n"
                       "    0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x          \n"
                       "  0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x        \n"
                       "  0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x        \n"
                       "  0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x        \n"
                       "    0x0x0x0x0x0x0x0x00x00x0x0x0x0x0x0x0x00x0          \n"
                       "	   0x0x0x0x0x0x0x0x00x0x0x0x0x0x0x0x0             \n"
                       "		   0x0x0x0x0x0x00x0x0x0x0x0x0                 \n"
                       "		       0x0x0x0x00x0x0x0x0                     \n"
                       "			       0x0x00x0x0                         \n"
                       "			        0x0x0x0x                          \n"
                       "			        0x0x0x0x                          \n"
                       "			        0x0x0x0x                          \n"
                       "			        0x0x0x0x                          \n"
                       "			      0x0x0x0x0x0x                        \n"
                       "			    0x0x0x0x0x0x0x0x                      \n"
                       "			  0x0x0x0x0x0x0x0x0x0x                    \n";

    fileWrite << tree << std::endl;

    fileWrite.close();
}